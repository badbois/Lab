# name: Build exe

# on: workflow_dispatch

# env:
#   TARGET: CoolLab # Should be the name of the target you created in your CMakeLists.txt and want to build and run


# jobs:
# #-----------------------------------------------------------------------------------------------
#   Windows_Clang_Release:
#     name: Windows Clang Release
#     runs-on: windows-latest
#     steps:
#     - uses: actions/checkout@v3
#       with:
#           submodules: recursive

#     # - name: Configure CMake
#     #   run: cmake -B ${{github.workspace}}\build -T ClangCL

#     - name: Build
#       run: echo ${{ github.sha }} > Release.txt
#     - name: Test
#       run: cat Release.txt

#     # - name: Build
#     #   run: cmake --build ${{github.workspace}}\build --config Release --target ${{env.TARGET}}

#     # - name: Zip building directory
#     #   run: tar cvzf ${{github.workspace}}\bin\Release.tar.gz ${{github.workspace}}\bin\Release
    
#     # - name: Look for path
#     #   run: ls ${{github.workspace}}\bin

#     # - name: Create Release
#     #   id: TEST_ID
#     #   uses: actions/create-release@v1
#     #   env:
#     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     #   with:
#     #     tag_name: TEST_TAG
#     #     release_name: TEST_NAME
#     #     draft: false
#     #     prerelease: false

#     # - name: Upload assets
#     #   id: upload-release-asset 
#     #   uses: actions/upload-release-asset@v1
#     #   env:
#     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     #   with:
#     #     upload_url: https://api.github.com/badbois/Lab/tree/main/.github
#     #     asset_path: ${{github.workspace}}\bin\Release.tar.gz
#     #     asset_name: program-${{ runner.os }}.tar.gz
#     #     asset_content_type: application/tar.gz

#     - name: print ref
#       run: echo github.refs

#     - name: Release
#       uses: softprops/action-gh-release@v1
#       if: startsWith(github.ref, 'refs')
#       with:
#         files: Release.txt
    
#     - name: Look for path after
#       run: ls ${{github.workspace}}\bin
# #-----------------------------------------------------------------------------------------------
# #   Linux_Clang_Release: 
# #     name: Linux Clang Release
# #     runs-on: ubuntu-22.04
# #     steps:
# #     - uses: actions/checkout@v3
# #       with:
# #         submodules: recursive

# #     - name: Install glfw dependencies
# #       run: sudo apt-get install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev mesa-common-dev build-essential libgtk-3-dev    

# #     - name: Configure CMake
# #       run: cmake -B ${{github.workspace}}/build -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++

# #     - name: Build
# #       run: cmake --build ${{github.workspace}}/build --config Release --target ${{env.TARGET}}

# #     - name: Run
# #       run: ${{github.workspace}}/build/${{env.TARGET}} 

# # #-----------------------------------------------------------------------------------------------
# #   MacOS_Clang_Release: 
# #     name: MacOS Clang Release
# #     runs-on: macos-12
# #     steps:
# #     - uses: actions/checkout@v3
# #       with:
# #         submodules: recursive

# #     - name: Configure CMake
# #       run: cmake -B ${{github.workspace}}/build -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++

# #     - name: Build
# #       run: cmake --build ${{github.workspace}}/build --config Release --target ${{env.TARGET}}

# #     - name: Run
# #       run: ${{github.workspace}}/build/${{env.TARGET}} 

name: Main

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: echo ${{ github.sha }} > Release.txt
    - name: Test
      run: cat Release.txt
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: Release.txt